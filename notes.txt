These will let you setup version control locally.
$ git config --global user.name "Your Name"
$ git config --global user.email "you@youraddress.com"
$ git config --global push.default matching
$ git config --global alias.co checkout
$ git init


good link on deploying to heroku
https://devcenter.heroku.com/articles/getting-started-with-nodejs?singlepage=true


api testing code

app.get('/api/test', (req, res) => {
    return res.send(process.env.HERE_API_KEY);
})

// default URL for website
app.use('/test', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/test.html'));
    //__dirname : will resolve to your project folder.
});


// default URL for website
app.use('/', function (req, res) {
    res.sendFile(path.join(__dirname + '/public/indx.html'));
    //__dirname : will resolve to your project folder.
});



some clean up from index.js

//Handle bar testing
// const HBtestString = "this is my initial test string for handlebar testing";
// const cityNames = [ 'New York', 'Paris', 'Los Angeles', 'San Francisco', 'Seattle', 'Portland', 'Chicago', 'Dallas', 'Mami', 'Phoenix', 'Tucson', 'Nogales' ]

// const test = ['test', 'test2', 'test3']

//Require our routes.

//Setup starter data.
// app.get('/', (req, res)=>{
//     res.render('home', {
//         hbout1: HBtestString,
//         city: cityNames,
//     });
// })



//took this out of FE_Logic.js
       var wData = template({
           name: data[0].city.name,
           country: data[0].city.country,
           population: data[0].city.population,
           uvIndex: data[1][0].value,
           timezone: data[0].city.timezone 
        });

 const weather = '{{uvIndex}} {{country}}' + 
        '{{population}} {{timezone}}';

//const template = Handlebars.compile(weather);